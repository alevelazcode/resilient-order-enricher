# Resilient Order Enricher - Environment Configuration Sample
# Copy this file to .env and adjust values as needed

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Base package name for Java application
BASE_PKG=com.resilient.orderworker

# Service Ports
SPRING_PORT=8081
GO_PORT=8080

# =============================================================================
# SWAGGER/OPENAPI CONFIGURATION
# =============================================================================

# Swagger UI settings
SWAGGER_ENABLED=true
SWAGGER_UI_PATH=/swagger-ui.html
API_DOCS_PATH=/v3/api-docs

# =============================================================================
# KAFKA CONFIGURATION
# =============================================================================

# Kafka broker configuration
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_INTERNAL_SERVERS=kafka:29092

# Kafka topics
KAFKA_ORDERS_TOPIC=orders
KAFKA_DLQ_TOPIC=orders-dlq

# Consumer configuration
KAFKA_CONSUMER_GROUP=order-worker-group
KAFKA_CONSUMER_CONCURRENCY=3
KAFKA_AUTO_OFFSET_RESET=earliest

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB configuration
MONGODB_URI=mongodb://localhost:27017
MONGODB_DATABASE=order_worker
MONGODB_INTERNAL_URI=mongodb://mongo:27017

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis configuration for distributed locking and caching
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_INTERNAL_HOST=redis
REDIS_PASSWORD=
REDIS_TIMEOUT=3000ms

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Go Enricher API configuration
ENRICHER_API_BASE_URL=http://localhost:8090
ENRICHER_API_INTERNAL_URL=http://enricher-api:8080
ENRICHER_API_TIMEOUT=5000ms

# =============================================================================
# RESILIENCE CONFIGURATION
# =============================================================================

# Circuit Breaker settings
CIRCUIT_BREAKER_FAILURE_RATE_THRESHOLD=50
CIRCUIT_BREAKER_WAIT_DURATION=30s
CIRCUIT_BREAKER_SLIDING_WINDOW_SIZE=10

# Retry settings
RETRY_MAX_ATTEMPTS=3
RETRY_WAIT_DURATION=1s
RETRY_MULTIPLIER=2

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log levels
LOG_LEVEL=INFO
ROOT_LOG_LEVEL=WARN
APP_LOG_LEVEL=INFO

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Spring profiles
SPRING_PROFILES_ACTIVE=dev

# Development flags
DEBUG_MODE=false
METRICS_ENABLED=true
HEALTH_CHECKS_ENABLED=true

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker network
DOCKER_NETWORK=order-worker-net

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test profiles
TEST_PROFILE=test

# TestContainers configuration
TESTCONTAINERS_REUSE_ENABLE=true
TESTCONTAINERS_CHECKS_DISABLE=true

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Actuator endpoints
MANAGEMENT_ENDPOINTS_ENABLED=true
MANAGEMENT_PORT=8081

# Metrics configuration
METRICS_EXPORT_ENABLED=true
METRICS_STEP=60s

# Health check configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
